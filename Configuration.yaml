---
port: 7890
socks-port: 7891
redir-port: 7892
tproxy-port: 7895
mixed-port: 7893
allow-lan: true
mode: script
log-level: info
ipv6: false
external-controller: 0.0.0.0:9090
external-ui: folder
dns:
  enable: true
  ipv6: false
  enhanced-mode: fake-ip
  listen: 0.0.0.0:7874
  fallback-filter:
    geoip: true
    geoip-code: ID
    ipcidr:
    - 0.0.0.0/8
    - 10.0.0.0/8
    - 100.64.0.0/10
    - 127.0.0.0/8
    - 169.254.0.0/16
    - 172.24.0.0/16
    - 172.16.0.0/12
    - 192.0.0.0/24
    - 192.0.2.0/24
    - 192.88.99.0/24
    - 192.168.0.0/16
    - 198.18.0.0/15
    - 198.51.100.0/24
    - 203.0.113.0/24
    - 224.0.0.0/4
    - 240.0.0.0/4
    - 255.255.255.255/32
    domain:
    - "+.google.com"
    - "+.netflix.com"
    - "+.facebook.com"
    - "+.youtube.com"
    - "+.githubusercontent.com"
    - "+.googlevideo.com"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - msftconnecttest.com
    - msftncsi.com
  fake-ip-filter:
  - "+.pool.ntp.org"
  - ntp7.*.com
  - ntp6.*.com
  - ntp5.*.com
  - ntp4.*.com
  - ntp3.*.com
  - ntp2.*.com
  - ntp1.*.com
  - ntp.*.com
  - time7.*.com
  - time6.*.com
  - time5.*.com
  - time4.*.com
  - time3.*.com
  - time2.*.com
  - time1.*.com
  - time.*.apple.com
  - time.*.edu.cn
  - time.*.gov
  - time.*.com
  - "*.home.arpa"
  - "*.local"
  - "*.test"
  - "*.localhost"
  - "*.invalid"
  - "*.example"
  - "*.localdomain"
  - time1.cloud.tencent.com
  - "*.ntp.org"
  - "*.time.edu"
  - "*.lan"
  - "*.ntp.org.cn"
  - "*.time.edu.cn"
  - "+.*"
  default-nameserver:
  - 8.8.8.8
  - 8.8.4.4
  - 1.1.1.1
  - 1.0.0.1
  nameserver:
  - 8.8.8.8
  - 8.8.4.4
  - 1.1.1.1
  - 1.0.0.1
  - https://dns.google/dns-query
  - tls://dns.google
  - https://dns.cloudflare.com/dns-query
  - tls://dns.google:853
  - https://1.1.1.1/dns-query
  - tls://1.1.1.1:853
  - https://dns.adguard-dns.com:3000/dns-query
  - tls://dns.adguard-dns.com:3000
  fake-ip-range: 198.18.0.1/16
proxy-providers:
  AKUN GSM:
    type: http
    url: https://raw.githubusercontent.com/masterwifinetworksolution/cfa-master/refs/heads/master/account-master1.yaml
    path: "./account-master1.yaml"
    interval: 3600
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 99
proxy-groups:
- name: SIMASTER
  type: select
  disable-udp: false
  proxies:
  - AKUN
  url: http://www.gstatic.com/generate_204
  interval: '99'
- name: AKUN
  type: select
  disable-udp: false
  use:
  - AKUN GSM
  url: http://www.gstatic.com/generate_204
  interval: '99'
script:
  code: |
    def main(ctx, metadata):
        directkeywordlist = ["youtube"]
        for directkeyword in directkeywordlist:
            if directkeyword in metadata["host"]:
                ctx.log('[Script] matched keyword %s use SIMASTER' % directkeyword)
                return "SIMASTER"

        directkeywordlist = ["facebook"]
        for directkeyword in directkeywordlist:
            if directkeyword in metadata["host"]:
                ctx.log('[Script] matched keyword %s use SIMASTER' % directkeyword)
                return "SIMASTER"

        directkeywordlist = ["speedtest"]
        for directkeyword in directkeywordlist:
            if directkeyword in metadata["host"]:
                ctx.log('[Script] matched keyword %s use SIMASTER' % directkeyword)
                return "SIMASTER"

        directkeywordlist = ["whatsapp"]
        for directkeyword in directkeywordlist:
            if directkeyword in metadata["host"]:
                ctx.log('[Script] matched keyword %s use SIMASTER' % directkeyword)
                return "SIMASTER"

        port = int(metadata['dst_port'])

        if metadata['network'] == 'UDP' and port == 443:
            ctx.log('[Script] matched QUIC traffic use SIMASTER')
            return 'SIMASTER'

        port_list = [21, 22, 23, 53, 80, 123, 143, 194, 443, 465, 587, 853, 993, 995, 998, 2052, 2053, 2082, 2083, 2086, 2095, 2096, 3389, 5222, 5228, 5229, 5230, 8080, 8443, 8880, 8888, 8889]
        if port not in port_list:
            ctx.log('[Script] not common port use SIMASTER')
            return 'SIMASTER'

        if metadata['dst_ip'] == '':
            metadata['dst_ip'] = ctx.resolve_ip(metadata['host'])

        if metadata['dst_ip'] != '':
            code = ctx.geoip(metadata['dst_ip'])
            if code == 'ID':
                ctx.log('[Script] Geoip ID')
                return 'Domestic'

        ctx.log('[Script] SIMASTER')
        return 'SIMASTER'
rules:
- IP-CIDR,198.18.0.1/16,REJECT,no-resolve
- GEOIP,ID,SIMASTER
- MATCH,SIMASTER
tun:
  enable: true
  stack: system
  auto-route: false
  auto-detect-interface: false
  dns-hijack:
  - tcp://any:53
profile:
  store-selected: true
  store-fake-ip: true
bind-address: "*"
secret:
experimental:
  sniff-tls-sni: true